# Kill all running containers.
alias dockerkillall='docker kill $(docker ps -q)'

# Delete all stopped containers.
alias dockercleanc='printf "\n>>> Deleting stopped containers\n\n" && docker rm $(docker ps -a -q)'

# Delete all untagged images.
alias dockercleani='printf "\n>>> Deleting untagged images\n\n" && docker rmi $(docker images -q -f dangling=true)'

# Delete all stopped containers and untagged images.
alias dockerclean='dockercleanc || true && dockercleani'

# Clean up no longer used volumes
alias dockercleanvol='printf "\n>>> Deleting unused volumes\n\n" && docker volume ls -qf dangling=true | xargs -r docker volume rm'

alias emacs='TERM=xterm-emacs emacs -nw $*'

# Quick access emacsclient
alias e='TERM=xterm-emacs emacsclient $*'
alias ae='TERM=xterm-emacs emacsclient -n $*'

function yaml-to-json () {
  SCRIPT="\
#!/usr/bin/env python3

import sys
import json
import yaml

d = yaml.safe_load(open(sys.argv[1]))
print(json.dumps(d))"
  python -c "$SCRIPT" "$1"
}

function json-to-yaml () {
  SCRIPT="\
#!/usr/bin/env python3

import sys
import json
import yaml

d = json.loads(open(sys.argv[1]).read())
print(yaml.dump(d))"
  python -c "$SCRIPT" "$1"
}

function url-unquote () {
  python3 -c "from urllib import parse; print(parse.unquote('$1'))"
}

function url-quote () {
  python3 -c "from urllib import parse; print(parse.quote('$1'))"
}
